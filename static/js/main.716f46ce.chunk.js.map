{"version":3,"sources":["assets/react-logo.svg","assets/bg.png","assets/angular-ionic-logo.svg","assets/pxb.svg","components/ShortlineDivider.tsx","components/FrameworkCard.tsx","components/ContentSection.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ShortlineDivider","theme","useTheme","style","backgroundColor","palette","primary","main","height","spacing","width","margin","useStyles","makeStyles","createStyles","wrapper","color","text","flex","textAlign","boxShadow","shadows","transition","image","backgroundSize","backgroundRepeat","backgroundPositionX","marginBottom","body","Colors","fontSize","footer","fontWeight","marginTop","version","packageName","a","fetch","encodeURIComponent","then","res","json","collected","metadata","err","FrameworkCard","props","title","url","classes","useState","setVersion","useEffect","fetchNpmVersion","_version","Card","className","CardContent","display","flexDirection","backgroundImage","Typography","variant","Button","href","noWrap","section","padding","maxWidth","actionContainer","justifyContent","breakpoints","down","alignItems","ContentSection","actions","background","default","length","root","minHeight","position","paddingBottom","ellipseBackground","ellipseBackgroundImage","clipPath","WebkitClipPath","header","alignSelf","logo","marginLeft","cardContainer","actionButton","minWidth","zIndex","bottom","fab","right","App","src","pxb","alt","lineHeight","align","angularImage","reactImage","textDecoration","key","AppBar","Toolbar","Fab","aria-label","Feedback","Boolean","window","location","hostname","match","ReactDOM","render","createMuiTheme","PXBThemes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.716f46ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.ba3be47d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.4f36fa00.png\";","module.exports = __webpack_public_path__ + \"static/media/angular-ionic-logo.18e46344.svg\";","module.exports = __webpack_public_path__ + \"static/media/pxb.c26b974a.svg\";","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function ShortlineDivider(): JSX.Element {\n    const theme = useTheme();\n\n    return (\n        <div\n            style={{\n                backgroundColor: theme.palette.primary.main,\n                height: theme.spacing(0.5),\n                width: theme.spacing(7.5),\n                margin: `${theme.spacing(2)}px auto`,\n            }}\n        />\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, createStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport { Typography, Button, Card, CardContent } from '@material-ui/core';\nimport { Spacer } from '@pxblue/react-components';\nimport * as Colors from '@pxblue/colors';\nimport ShortlineDivider from './ShortlineDivider';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        wrapper: {\n            color: theme.palette.text.primary,\n            margin: theme.spacing(1),\n            flex: '1 1 0px',\n            textAlign: 'center',\n            '&:hover': {\n                boxShadow: theme.shadows[12],\n                transition: 'ease-in-out 200ms',\n            },\n        },\n        image: {\n            backgroundSize: 'contain',\n            height: 150,\n            backgroundRepeat: 'no-repeat',\n            backgroundPositionX: 'center',\n            marginBottom: theme.spacing(2),\n        },\n        body: {\n            color: Colors.gray[500],\n            fontSize: 14, // Kyle's recommendation\n        },\n        footer: {\n            color: Colors.gray[300],\n            fontWeight: 600,\n            marginTop: theme.spacing(3),\n            fontSize: 12, // Kyle's recommendation\n        },\n        version: {\n            marginTop: 0,\n            fontSize: 12, // Kyle's recommendation\n            fontWeight: 600,\n            color: Colors.gray[300],\n        },\n    })\n);\n\ntype FrameworkCardProps = {\n    title: string;\n    body: string;\n    packageName: string;\n    image: string;\n    url: string;\n    version?: string;\n};\n\n// return the #.#.# version number as a promise\n// return placeholder string if unsuccessful\nasync function fetchNpmVersion(packageName: string): Promise<string> {\n    return await fetch(`https://api.npms.io/v2/package/${encodeURIComponent(packageName)}`)\n        .then((res) => res.json())\n        .then((json) => {\n            let version = '-.-.-';\n            try {\n                version = json.collected.metadata.version;\n            } catch (err) {\n                version = '';\n            }\n            return version;\n        });\n}\n\nexport function FrameworkCard(props: FrameworkCardProps): JSX.Element {\n    const { title, body, packageName, image, url } = props;\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    const [version, setVersion] = useState('');\n    useEffect(() => {\n        fetchNpmVersion(packageName).then((_version) => setVersion(_version));\n    });\n    return (\n        <Card className={classes.wrapper}>\n            <CardContent style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                <div className={classes.image} style={{ backgroundImage: `url(\"${image}\")` }} />\n                <Typography variant={'h5'}>{title}</Typography>\n                <ShortlineDivider />\n                <Typography className={classes.body} variant={'body1'}>\n                    {body}\n                </Typography>\n                <Spacer />\n                <div>\n                    <Button\n                        style={{ fontWeight: 600, marginTop: theme.spacing(3) }}\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        href={url}\n                    >\n                        View API\n                    </Button>\n                </div>\n                <Typography variant={'subtitle2'} className={classes.footer} noWrap={true}>\n                    {packageName}\n                </Typography>\n                <Typography variant={'subtitle2'} className={classes.version}>\n                    {version && <span>v{version}</span>}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from 'react';\nimport { makeStyles, createStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport ShortlineDivider from './ShortlineDivider';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        section: {\n            margin: `${theme.spacing(4)}px auto`,\n            padding: `${theme.spacing(3)}px`,\n            textAlign: 'center',\n            maxWidth: 600,\n        },\n        actionContainer: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: theme.spacing(1),\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n        },\n    })\n);\n\ntype ContentSectionProps = {\n    title: string;\n    body: string | JSX.Element;\n    actions?: JSX.Element[];\n};\n\nexport function ContentSection(props: ContentSectionProps): JSX.Element {\n    const { title, body, actions } = props;\n    const theme = useTheme();\n    const classes = useStyles(theme);\n\n    return (\n        <div style={{ backgroundColor: theme.palette.background.default }}>\n            <div className={classes.section}>\n                <Typography variant={'h4'} style={{ marginBottom: theme.spacing(1) }}>\n                    {title}\n                </Typography>\n                <ShortlineDivider />\n                <Typography>{body}</Typography>\n                {actions && actions.length > 0 && <div className={classes.actionContainer}>{actions}</div>}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { FrameworkCard } from './components/FrameworkCard';\nimport { ContentSection } from './components/ContentSection';\nimport { makeStyles, createStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport { AppBar, Typography, Button, Fab, Toolbar } from '@material-ui/core';\n\nimport * as Colors from '@pxblue/colors';\nimport { Feedback } from '@material-ui/icons';\n\nimport ellipseBackgroundImage from './assets/bg.png';\nimport angularImage from './assets/angular-ionic-logo.svg';\nimport reactImage from './assets/react-logo.svg';\nimport pxb from './assets/pxb.svg';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            minHeight: '100%',\n            position: 'relative',\n            paddingBottom: theme.spacing(8),\n        },\n        ellipseBackground: {\n            background: `url(${ellipseBackgroundImage}) ${theme.palette.primary.main}`,\n            backgroundSize: 'cover',\n            clipPath: 'ellipse(70% 200px at 50% 50px)',\n            WebkitClipPath: 'ellipse(70% 200px at 50% 50px)',\n            [theme.breakpoints.down('sm')]: {\n                clipPath: 'ellipse(672px 200px at 50% 50px)',\n                WebkitClipPath: 'ellipse(672px 200px at 50% 50px)',\n            },\n            width: '100%',\n            height: 250,\n            position: 'fixed',\n            zIndex: -1,\n        },\n        header: {\n            alignSelf: 'center',\n            color: Colors.white[50],\n            padding: `${theme.spacing(4)} ${theme.spacing(2)}px`,\n        },\n        logo: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n                alignItems: 'center',\n                textAlign: 'center',\n            },\n        },\n        title: {\n            marginLeft: 10,\n            [theme.breakpoints.down('xs')]: {\n                display: 'none',\n            },\n        },\n        cardContainer: {\n            margin: `0 auto`,\n            justifyContent: 'center',\n            position: 'relative',\n            display: 'flex',\n            width: '100%',\n            maxWidth: 960,\n            [theme.breakpoints.down('sm')]: {\n                display: 'block',\n                maxWidth: 340,\n            },\n        },\n        actionButton: {\n            margin: theme.spacing(1),\n            minWidth: 210,\n        },\n        footer: {\n            zIndex: 0,\n            backgroundColor: Colors.black[500],\n            textAlign: 'center',\n            position: 'absolute',\n            bottom: 0,\n        },\n        fab: {\n            position: 'fixed',\n            right: theme.spacing(3),\n            bottom: theme.spacing(3),\n            boxShadow: theme.shadows[10],\n        },\n    })\n);\n\nfunction App(): JSX.Element {\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    return (\n        <>\n            <div className={classes.ellipseBackground} />\n            <div className={classes.root}>\n                <div className={classes.header}>\n                    <div className={classes.logo}>\n                        <img src={pxb} className={'rotateMe'} alt={'Rotating PX Blue logo'} />\n                        <div className={classes.title}>\n                            <Typography variant={'h5'} style={{ lineHeight: 1 }}>\n                                Power Xpert <b>Blue</b>\n                            </Typography>\n                            <Typography style={{ fontWeight: 300 }}>Powering teams to make what matters*</Typography>\n                        </div>\n                    </div>\n                    <Typography variant={'h5'} align={'center'}>\n                        Component Library API Documentation\n                    </Typography>\n                </div>\n\n                <div>\n                    <div className={classes.cardContainer}>\n                        <FrameworkCard\n                            image={angularImage}\n                            title={'Angular / Ionic'}\n                            body={\n                                'Our Angular component library can be used in applications built using Angular 7+ and Angular Material. They can also be used in Ionic applications that are built with Angular. '\n                            }\n                            packageName={'@pxblue/angular-components'}\n                            url={'/angular'}\n                        />\n                        <FrameworkCard\n                            image={reactImage}\n                            title={'React'}\n                            body={\n                                'Our React component library can be used for applications built using React v16+ with Material UI. They include strong type definitions so they will work well in either JavaScript or TypeScript projects.'\n                            }\n                            packageName={'@pxblue/react-components'}\n                            url={'/react'}\n                        />\n                        <FrameworkCard\n                            image={reactImage}\n                            title={'React Native'}\n                            body={\n                                'Our React Native component library can be used for applications built with React Native v0.60+. They include strong type definitions so they will work well in either JavaScript or TypeScript projects.'\n                            }\n                            packageName={'@pxblue/react-native-components'}\n                            url={'/react-native'}\n                        />\n                    </div>\n                    <ContentSection\n                        title={'About'}\n                        body={\n                            <>\n                                {`These component libraries are part of the Power Xpert Blue design system. They simplify development efforts and ensure consistency across products by providing out-of-the-box components implementations for common UI elements. Our documentation uses `}\n                                <a\n                                    href={'https://storybook.js.org/'}\n                                    style={{ color: Colors.blue[500], textDecoration: 'none' }}\n                                >\n                                    Storybook\n                                </a>\n                                {` to showcase the various ways these components can be configured.`}\n                            </>\n                        }\n                        actions={[\n                            <Button\n                                key={'action_1'}\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                href=\"https://pxblue.github.io\"\n                            >\n                                MORE ON PX BLUE\n                            </Button>,\n                            <Button\n                                key={'action_2'}\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                href=\"https://pxblue.github.io\" // TODO: change to a valid link\n                            >\n                                DEVELOPMENT ROADMAP\n                            </Button>,\n                        ]}\n                    />\n                </div>\n                <AppBar position={'static'} className={classes.footer}>\n                    <Toolbar variant={'dense'}>\n                        <Typography variant={'caption'} align={'center'} style={{ flex: '1 1 0px' }}>\n                            Copyright 2020 Eaton. Licensed under BSD-3-Clause.\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Fab\n                    color=\"primary\"\n                    className={classes.fab}\n                    aria-label=\"feedback\"\n                    href=\"https://pxblue.github.io/community/contactus\"\n                >\n                    <Feedback />\n                </Fab>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport * as PXBThemes from '@pxblue/react-themes';\r\nimport 'typeface-open-sans';\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={createMuiTheme(PXBThemes.blue)}>\r\n        <CssBaseline />\r\n        <App />\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}